{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet QlspComponent = class QlspComponent {\n  constructor(watchService, formBuilder) {\n    this.watchService = watchService;\n    this.formBuilder = formBuilder;\n    this.isAddForm = true;\n    this.isEditMode = false;\n    this.watchForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      brand: ['', Validators.required],\n      price: [null, Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.getWatches();\n  }\n  getWatches() {\n    this.watchService.getWatches().subscribe(watches => this.watches = watches);\n  }\n  onSelect(watch) {\n    this.selectedWatch = watch;\n    this.watchForm.setValue({\n      name: watch.name,\n      brand: watch.brand,\n      price: watch.price\n    });\n    this.isAddForm = false;\n    this.isEditMode = true;\n  }\n  addWatch() {\n    const watch = {\n      id: null,\n      name: this.watchForm.value.name,\n      brand: this.watchForm.value.brand,\n      price: this.watchForm.value.price\n    };\n    this.watchService.addWatch(watch).subscribe(watch => {\n      this.watches.push(watch);\n      this.watchForm.reset();\n      this.isAddForm = true;\n    });\n  }\n  deleteWatch(watch) {\n    this.watchService.deleteWatch(watch).subscribe(() => {\n      this.watches = this.watches.filter(w => w !== watch);\n      if (this.selectedWatch === watch) {\n        this.selectedWatch = null;\n      }\n    });\n  }\n  updateWatch() {\n    const watch = {\n      id: this.selectedWatch.id,\n      name: this.watchForm.value.name,\n      brand: this.watchForm.value.brand,\n      price: this.watchForm.value.price\n    };\n    this.watchService.updateWatch(watch).subscribe(() => {\n      const index = this.watches.findIndex(w => w.id === watch.id);\n      this.watches[index] = watch;\n      this.watchForm.reset();\n      this.selectedWatch = null;\n      this.isAddForm = true;\n      this.isEditMode = false;\n    });\n  }\n  resetForm() {\n    this.watchForm.reset();\n    this.selectedWatch = null;\n    this.isAddForm = true;\n    this.isEditMode = false;\n  }\n};\nQlspComponent = __decorate([Component({\n  selector: 'app-qlsp',\n  templateUrl: './qlsp.component.html',\n  styleUrls: ['./qlsp.component.css']\n})], QlspComponent);\nexport { QlspComponent };","map":{"version":3,"names":["Component","Validators","QlspComponent","constructor","watchService","formBuilder","isAddForm","isEditMode","watchForm","group","name","required","brand","price","ngOnInit","getWatches","subscribe","watches","onSelect","watch","selectedWatch","setValue","addWatch","id","value","push","reset","deleteWatch","filter","w","updateWatch","index","findIndex","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Vinh-PC\\Documents\\angular\\QLDongHo\\my-app\\src\\app\\components\\qlsp\\qlsp.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Watch } from '../watch';\nimport { WatchService } from '../watch.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-qlsp',\n  templateUrl: './qlsp.component.html',\n  styleUrls: ['./qlsp.component.css']\n})\nexport class QlspComponent {\n  watches: Watch[];\n  selectedWatch: Watch;\n  watchForm: FormGroup;\n  isAddForm: boolean = true;\n  isEditMode: boolean = false;\n\n  constructor(\n    private watchService: WatchService,\n    private formBuilder: FormBuilder\n  ) {\n    this.watchForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      brand: ['', Validators.required],\n      price: [null, Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.getWatches();\n  }\n\n  getWatches(): void {\n    this.watchService.getWatches().subscribe(watches => this.watches = watches);\n  }\n\n  onSelect(watch: Watch): void {\n    this.selectedWatch = watch;\n    this.watchForm.setValue({\n      name: watch.name,\n      brand: watch.brand,\n      price: watch.price\n    });\n    this.isAddForm = false;\n    this.isEditMode = true;\n  }\n\n  addWatch(): void {\n    const watch: Watch = {\n      id: null,\n      name: this.watchForm.value.name,\n      brand: this.watchForm.value.brand,\n      price: this.watchForm.value.price\n    };\n    this.watchService.addWatch(watch).subscribe(watch => {\n      this.watches.push(watch);\n      this.watchForm.reset();\n      this.isAddForm = true;\n    });\n  }\n\n  deleteWatch(watch: Watch): void {\n    this.watchService.deleteWatch(watch).subscribe(() => {\n      this.watches = this.watches.filter(w => w !== watch);\n      if (this.selectedWatch === watch) {\n        this.selectedWatch = null;\n      }\n    });\n  }\n\n  updateWatch(): void {\n    const watch: Watch = {\n      id: this.selectedWatch.id,\n      name: this.watchForm.value.name,\n      brand: this.watchForm.value.brand,\n      price: this.watchForm.value.price\n    };\n    this.watchService.updateWatch(watch).subscribe(() => {\n      const index = this.watches.findIndex(w => w.id === watch.id);\n      this.watches[index] = watch;\n      this.watchForm.reset();\n      this.selectedWatch = null;\n      this.isAddForm = true;\n      this.isEditMode = false;\n    });\n  }\n\n  resetForm(): void {\n    this.watchForm.reset();\n    this.selectedWatch = null;\n    this.isAddForm = true;\n    this.isEditMode = false;\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}