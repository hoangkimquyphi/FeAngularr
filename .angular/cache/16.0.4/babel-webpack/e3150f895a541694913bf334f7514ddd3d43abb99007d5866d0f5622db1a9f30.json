{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nclass DanhmucComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.createForm();\n  }\n  createForm() {\n    this.registrationForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      address: ['', Validators.required],\n      product: ['', Validators.required],\n      quantity: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // Gửi thông tin đăng ký đến API hoặc lưu trữ trong cơ sở dữ liệu\n    console.log(this.registrationForm.value);\n  }\n}\nDanhmucComponent.ɵfac = function DanhmucComponent_Factory(t) {\n  return new (t || DanhmucComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nDanhmucComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DanhmucComponent,\n  selectors: [[\"app-danhmuc\"]],\n  decls: 21,\n  vars: 0,\n  consts: [[\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [1, \"button-group\"], [\"routerLink\", \"/create-supplier\", 1, \"button\"], [\"routerLink\", \"/create-category\", 1, \"button\"], [1, \"search-container\"], [\"action\", \"/search\"], [\"type\", \"text\", \"placeholder\", \"Nh\\u1EADp t\\u1EEB kh\\u00F3a t\\u00ECm ki\\u1EBFm\", \"name\", \"search\"], [\"type\", \"submit\"], [1, \"fa\", \"fa-search\"]],\n  template: function DanhmucComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"meta\", 1)(4, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\")(6, \"div\", 2)(7, \"a\", 3);\n      i0.ɵɵtext(8, \"T\\u1EA1o m\\u1EDBi kh\\u00E1ch h\\u00E0ng\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"a\", 4);\n      i0.ɵɵtext(10, \"Th\\u00EAm danh m\\u1EE5c\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 4);\n      i0.ɵɵtext(12, \"In d\\u1EEF li\\u1EC7u\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"form\", 6);\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementStart(16, \"button\", 8);\n      i0.ɵɵelement(17, \"i\", 9);\n      i0.ɵɵtext(18, \"T\\u00ECm Ki\\u1EBFm\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"body\");\n      i0.ɵɵelement(20, \"html\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".button-group[_ngcontent-%COMP%] {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tmargin-bottom: 20px;\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  .button[_ngcontent-%COMP%] {\\n\\t\\t\\tdisplay: inline-block;\\n\\t\\t\\tpadding: 10px;\\n\\t\\t\\tfont-size: 16px;\\n\\t\\t\\tbackground-color: #008CBA;\\n\\t\\t\\tcolor: white;\\n\\t\\t\\tborder: none;\\n\\t\\t\\ttext-decoration: none;\\n\\t\\t\\tmargin-right: 10px;\\n\\t\\t\\tcursor: pointer;\\n\\t\\t  }\\n\\t\\t  \\n\\t\\t  .button[_ngcontent-%COMP%]:hover {\\n\\t\\t\\tbackground-color: #006B8F;\\n\\t\\t  }\\n      .search-container[_ngcontent-%COMP%] {\\n        display: flex;\\n        justify-content: flex-end;\\n        margin-top: 20px;\\n      }\\n      \\n      input[type=text][_ngcontent-%COMP%] {\\n        width: 250px;\\n        padding: 10px;\\n        font-size: 16px;\\n        border: none;\\n        border-bottom: 2px solid #ccc;\\n      }\"]\n});\nexport { DanhmucComponent };","map":{"version":3,"names":["Validators","DanhmucComponent","constructor","fb","createForm","registrationForm","group","name","required","email","phone","address","product","quantity","onSubmit","console","log","value","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","DanhmucComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\Users\\Vinh-PC\\Documents\\angular\\QLDongHo\\my-app\\src\\app\\components\\danhmuc\\danhmuc.component.ts","C:\\Users\\Vinh-PC\\Documents\\angular\\QLDongHo\\my-app\\src\\app\\components\\danhmuc\\danhmuc.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-danhmuc',\n  templateUrl: './danhmuc.component.html',\n  styleUrls: ['./danhmuc.component.css']\n})\nexport class DanhmucComponent {\n  registrationForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.registrationForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      address: ['', Validators.required],\n      product: ['', Validators.required],\n      quantity: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    // Gửi thông tin đăng ký đến API hoặc lưu trữ trong cơ sở dữ liệu\n    console.log(this.registrationForm.value);\n  }\n\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<title></title>\n  <script>\n    const form = document.querySelector('#product-form');\n    const table = document.querySelector('#product-table tbody');\n    \n    form.addEventListener('submit', (event) => {\n      // Prevent default form submission\n      event.preventDefault();\n    \n      // Get form values\n      const name = document.querySelector('#name').value;\n      const price = document.querySelector('#price').value;\n      const quantity = document.querySelector('#quantity').value;\n      const image = document.querySelector('#image').value;\n      \n      // Create new table row with product information\n      const newRow = table.insertRow();\n      const nameCell = newRow.insertCell(0);\n      const priceCell = newRow.insertCell(1);\n      const quantityCell = newRow.insertCell(2);\n      const imageCell = newRow.insertCell(3);\n      nameCell.textContent = name;\n      priceCell.textContent = price;\n      quantityCell.textContent = quantity;\n      if (image) {\n        const img = document.createElement('img');\n        img.src = image;\n        img.alt = name;\n        img.width = 100;\n        imageCell.appendChild(img);\n      }\n      \n      // Reset form\n      form.reset();\n    });\n  </script>\n  <style>\n    .button-group {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tmargin-bottom: 20px;\n\t\t  }\n\t\t  \n\t\t  .button {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 16px;\n\t\t\tbackground-color: #008CBA;\n\t\t\tcolor: white;\n\t\t\tborder: none;\n\t\t\ttext-decoration: none;\n\t\t\tmargin-right: 10px;\n\t\t\tcursor: pointer;\n\t\t  }\n\t\t  \n\t\t  .button:hover {\n\t\t\tbackground-color: #006B8F;\n\t\t  }\n      .search-container {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: 20px;\n      }\n      \n      input[type=text] {\n        width: 250px;\n        padding: 10px;\n        font-size: 16px;\n        border: none;\n        border-bottom: 2px solid #ccc;\n      }\n      \n    \n  </style>\n</head>\n<body>\n  <div class=\"button-group\">\n    <a routerLink=\"/create-supplier\" class=\"button\">Tạo mới khách hàng</a>\n    <a routerLink=\"/create-category\" class=\"button\">Thêm danh mục</a>\n    <a routerLink=\"/create-category\" class=\"button\">In dữ liệu</a>\n  \n\n  </div>\n  <div class=\"search-container\">\n    <form action=\"/search\">\n      <input type=\"text\" placeholder=\"Nhập từ khóa tìm kiếm\" name=\"search\">\n      <button type=\"submit\"><i class=\"fa fa-search\"></i>Tìm Kiếm</button>\n    </form>\n  </div>\n\n<body>\n<html>\n\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AACnE,MAKaC,gBAAgB;EAG3BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACpCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAChCG,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MAClCI,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ,CAAC;MAClCK,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAM,QAAQA,CAAA;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,gBAAgB,CAACY,KAAK,CAAC;EAC1C;;AArBWhB,gBAAgB,C;mBAAhBA,gBAAgB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAhBpB,gBAAgB,C;QAAhBA,gBAAgB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCN7BV,EAAA,CAAAY,cAAA,WAAM;MAELZ,EAAA,CAAAa,SAAA,cAAsB;MA6EvBb,EAAA,CAAAc,YAAA,EAAO;MACPd,EAAA,CAAAY,cAAA,WAAM;MAE8CZ,EAAA,CAAAe,MAAA,6CAAkB;MAAAf,EAAA,CAAAc,YAAA,EAAI;MACtEd,EAAA,CAAAY,cAAA,WAAgD;MAAAZ,EAAA,CAAAe,MAAA,+BAAa;MAAAf,EAAA,CAAAc,YAAA,EAAI;MACjEd,EAAA,CAAAY,cAAA,YAAgD;MAAAZ,EAAA,CAAAe,MAAA,4BAAU;MAAAf,EAAA,CAAAc,YAAA,EAAI;MAIhEd,EAAA,CAAAY,cAAA,cAA8B;MAE1BZ,EAAA,CAAAa,SAAA,gBAAqE;MACrEb,EAAA,CAAAY,cAAA,iBAAsB;MAAAZ,EAAA,CAAAa,SAAA,YAA4B;MAAAb,EAAA,CAAAe,MAAA,0BAAQ;MAAAf,EAAA,CAAAc,YAAA,EAAS;MAIzEd,EAAA,CAAAY,cAAA,YAAM;MACNZ,EAAA,CAAAa,SAAA,YAAM;MADNb,EAAA,CAAAc,YAAA,EAAM;;;;;;SDzFO/B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}